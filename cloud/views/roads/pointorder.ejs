<ol class="breadcrumb">
    <li><a href="/">首页</a></li>
    <li><a href="/roads/list">路线</a></li>
    <li class="active"><%= title %></li>
</ol>

<style>
    * {
        margin: 0;
        padding: 0;
        list-style: none;
    }

    .item_content ul {
        list-style: none;
    }

    .item_content ul li {

        width: 200px;
        height: 120px;
        float: left;
        margin: 10px 0px 0px 10px;
    }

    .item_content {
        width: 1050px;
        /*height: 400px;*/
        /*border: 1px solid #ccc;*/
        margin: 10px auto;
        display: block;
    }

    .item_content .item {
        width: 200px;
        height: 120px;
        line-height: 120px;
        text-align: center;
        cursor: pointer;
        background: #ccc;
    }

    .item_content .item img {
        width: 200px;
        height: 120px;
        border-radius: 6px;
    }
</style>
<!-- 代码部分begin -->
<h3 style="text-align: center;"><%= title %></h3>
<h5 style="text-align: center;color: #4f4c4c">注：拖动进行排序</h5>
<div class="item_content">
    <ul id="abc" class="point_ul">

        <% for(var i = 0;i < points.length;i++){ %>


        <%if(points[i].type=="文本"){%>

        <li id="<%= i+1 %>>">
            <div class="item"  data-pointid="<%= points[i].id %>" data-order="<%= points[i].order %>" style="background-color: #c67605">

                <span style="padding-top: 18%;position: absolute;bottom:10px;left: 10px;top:10px;right: 10px;;z-index: 55;width: 180px;color: #bd362f;line-height: 20px;background-color: rgba(255,255,255,0.6)"><%= points[i].title %></span>
            </div>
        </li>
        <%}else{%>
        <li id="<%= i+1 %>>">
            <div class="item"  data-pointid="<%= points[i].id %>" data-order="<%= points[i].order %>">
                <img src="/points/getpointfirstimage/<%= points[i].id + "?w=600&h=400&date=" + new Date() %>"/>
                <span style="padding-top: 18%;position: absolute;bottom:10px;left: 10px;top:10px;right: 10px;;z-index: 55;width: 180px;color: #bd362f;line-height: 20px;background-color: rgba(255,255,255,0.6)"><%= points[i].title %></span>
            </div>
        </li>
        <%}%>

        <% } %>
    </ul>
</div>

<div class="row">
    <div class="col-md-12">


    </div>
</div>
<br/>
<div class="row">
    <div class="col-md-12">
        <button class="btn btn-default" onclick="getchild()">保存排序</button>

    </div>
</div>

<script src="http://www.lanrenzhijia.com/ajaxjs/jquery.min.js"></script>
<script>
    $(function () {
        function Pointer(x, y) {
            this.x = x;
            this.y = y;
        }

        function Position(left, top) {
            this.left = left;
            this.top = top;
        }

        $(".item_content .item").each(function (i) {
            this.init = function () { // 初始化
                this.box = $(this).parent();
                $(this).attr("index", i).css({
                    position: "absolute",
                    left: this.box.offset().left,
                    top: this.box.offset().top
                }).appendTo(".item_content");
                this.drag();
            },
                    this.move = function (callback) { // 移动
                        $(this).stop(true).animate({
                            left: this.box.offset().left,
                            top: this.box.offset().top
                        }, 500, function () {
                            if (callback) {
                                callback.call(this);
                            }
                        });
                    },
                    this.collisionCheck = function () {
                        var currentItem = this;
                        var direction = null;
                        $(this).siblings(".item").each(function () {
                            if (
                                    currentItem.pointer.x > this.box.offset().left &&
                                    currentItem.pointer.y > this.box.offset().top &&
                                    (currentItem.pointer.x < this.box.offset().left + this.box.width()) &&
                                    (currentItem.pointer.y < this.box.offset().top + this.box.height())
                            ) {
                                // 返回对象和方向
                                if (currentItem.box.offset().top < this.box.offset().top) {
                                    direction = "down";
                                } else if (currentItem.box.offset().top > this.box.offset().top) {
                                    direction = "up";
                                } else {
                                    direction = "normal";
                                }
                                this.swap(currentItem, direction);
                            }
                        });
                    },
                    this.swap = function (currentItem, direction) { // 交换位置
                        if (this.moveing) return false;
                        var directions = {
                            normal: function () {
                                var saveBox = this.box;
                                this.box = currentItem.box;
                                currentItem.box = saveBox;
                                this.move();
                                $(this).attr("index", this.box.index());
                                $(currentItem).attr("index", currentItem.box.index());
                            },
                            down: function () {
                                // 移到上方
                                var box = this.box;
                                var node = this;
                                var startIndex = currentItem.box.index();
                                var endIndex = node.box.index();
                                ;
                                for (var i = endIndex; i > startIndex; i--) {
                                    var prevNode = $(".item_content .item[index=" + (i - 1) + "]")[0];
                                    node.box = prevNode.box;
                                    $(node).attr("index", node.box.index());
                                    node.move();
                                    node = prevNode;
                                }
                                currentItem.box = box;
                                $(currentItem).attr("index", box.index());
                            },
                            up: function () {
                                // 移到上方
                                var box = this.box;
                                var node = this;
                                var startIndex = node.box.index();
                                var endIndex = currentItem.box.index();
                                ;
                                for (var i = startIndex; i < endIndex; i++) {
                                    var nextNode = $(".item_content .item[index=" + (i + 1) + "]")[0];
                                    node.box = nextNode.box;
                                    $(node).attr("index", node.box.index());
                                    node.move();
                                    node = nextNode;
                                }
                                currentItem.box = box;
                                $(currentItem).attr("index", box.index());
                            }
                        }
                        directions[direction].call(this);
                    },
                    this.drag = function () { // 拖拽
                        var oldPosition = new Position();
                        var oldPointer = new Pointer();
                        var isDrag = false;
                        var currentItem = null;
                        $(this).mousedown(function (e) {
                            e.preventDefault();
                            oldPosition.left = $(this).position().left;
                            oldPosition.top = $(this).position().top;
                            oldPointer.x = e.clientX;
                            oldPointer.y = e.clientY;
                            isDrag = true;

                            currentItem = this;

                        });
                        $(document).mousemove(function (e) {
                            var currentPointer = new Pointer(e.clientX, e.clientY);
                            if (!isDrag) return false;
                            $(currentItem).css({
                                "opacity": "0.8",
                                "z-index": 999
                            });
                            var left = currentPointer.x - oldPointer.x + oldPosition.left;
                            var top = currentPointer.y - oldPointer.y + oldPosition.top;
                            $(currentItem).css({
                                left: left,
                                top: top
                            });
                            currentItem.pointer = currentPointer;
                            // 开始交换位置


                            currentItem.collisionCheck();


                        });
                        $(document).mouseup(function () {
                            if (!isDrag) return false;
                            isDrag = false;
                            currentItem.move(function () {
                                $(this).css({
                                    "opacity": "1",
                                    "z-index": 0
                                });
                            });
                        });
                    }
            this.init();
        });
    });
</script>
<!-- 代码部分end -->
<script type="text/javascript">
    function getchild() {
        //$("#abc").children().each(function() {
        //    console.log($(this).attr("id"))
        //});
        $(".item").each(function () {
            console.log($(this).attr("index"))
            console.log($(this))


            var neworder=parseInt($(this).attr("index"))+1;

            /*修改序号*/

                var pointid =$(this)[0].dataset.pointid;
                var order =$(this)[0].dataset.order;
            console.log("id:"+pointid+"-new:"+neworder+"-old:"+order)

            if(neworder!=order) {
                console.log("asdfasdf")
                $.ajax({
                    type: "POST",
                    url: "/points/editpointorder",
                    data: "PointID=" + pointid + "&Order=" + neworder,
                    dataType: "json",
                    success: function (data) {
                        if (data == true) {
                            console.log("success")
                        }
                        else {
                            console.log("faild")
                        }
                    }
                });
            }
            });



    }
</script>